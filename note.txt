angular
-------

npm- node package manager   npm -v

install
     - npm i -g @angular/cli@latest

project creation 
    -ng new projectname

running command
    -ng serve --open     ng s -o     

Angular technologies
--------------------
html
css
typescript -strictly typed

number :any
transpilling- browser convert ts code to js while running

npm i-install node module

angular configuration
---------------------
browser list -
editor config-
git ignore-to ignore unwanted files while uploading to git 
angular.json-angular project and angular cli configuration
karma.config- tool used to testing of website
packagelock.json-like a copy of package.json
package.json-used to manage third party libraries
readme.md- to read to understand details aoubt the project
tsconfig.app.json-typescript configuration files
node modules- 


assets- folder use to save images and other datas used in project


project
-------
root module
  -root component
      -we can create sub component inside the root module
  -sub modules
      -components


module    = ts file manage all the components inside that module
component = ts , html , css 
              -selector used to display the component 

        
word starts with @ are decorators that used to store metadata


create new component
    -ng generate component componentname
    -ng g c first     

in index.html only one component works that is root component
we can call other sub components in root component           


WORKING cycle of angular component
----------------------------------
constructor -->ngOnInit-->other methods

data binding in angular
-----------------------
ts - component
html - view

1-One way binding
-----------------
  1.1 ts to html (component to view data sharing)
    
      1.1.1 -string interpollattion  {{}}
      1.1.2 -property binding [property_name]="data"

  1.2 html to ts (view to component data sharing)
      1.2.1 -event binding (eventname)="methods()"  
      1.2.2 -$event binding (eventname)="method($event)"
      1.2.3 -event binding with template rendering variable  #variableName

2-Two way binding
-----------------
  2.1 ngModel [(ngModel)]="variable"
      
      -FormModule -module used to apply ngModel
